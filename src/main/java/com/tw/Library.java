package com.tw;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    private Map<Integer,Student> students;

    public static void main(String[] args) {
        Library library = new Library();
        library.students = new HashMap<>();
        int exit = -1;
        do{
            System.out.println("1. 添加学生");
            System.out.println("2. 生成成绩单");
            System.out.println("3. 退出");
            System.out.println("请输入你的选择（1~3）");
            Scanner scanner = new Scanner(System.in);
            int choice = scanner.nextInt();
            switch (choice){
                case 1:
                    library.addStudent();
                    break;
                case 2:
                    library.printInfo();
                    break;
                case 3:
                    exit = 3;
                    break;
            }
        }while (exit != 3);
    }

    public void addStudent(){
        System.out.println("请输入学生信息（格式：姓名, 学号, 民族, 班级, 备注, 学科: 成绩, ...），按回车提交：");
        Scanner scanner = new Scanner(System.in);
        String infoStr = scanner.nextLine();
        Pattern pattern = Pattern.compile("[\\u4e00-\\u9fa5]{2,10}\\,\\s\\d{4}\\,\\s[\\u4e00-\\u9fa5]{2,10}\\,\\s\\d{2}\\,\\s[\\u4e00-\\u9fa5]{1,6}(\\,\\s[\\u4e00-\\u9fa5]{2,10}\\:\\s([1-9][0-9]|[1-9]|0|100))+");
        Matcher matcher = pattern.matcher(infoStr);
        while (!matcher.matches()){
            System.out.println("请按正确的格式输入（格式：姓名, 学号, 民族, 班级, 备注, 学科: 成绩, ...）：");
            infoStr = scanner.nextLine();
            matcher = pattern.matcher(infoStr);
        }
        String[] info = infoStr.split(",");
        Student student = new Student();
        student.name = info[0].trim();
        student.id = Integer.parseInt(info[1].trim());
        student.nation = info[2].trim();
        student.klass = Integer.parseInt(info[3].trim());
        student.remark = info[4].trim();
        student.subject_score = new HashMap<>();
        for (int i = 5; i < info.length; i++) {
            String[] temp = info[i].split(":");
            student.subject_score.put(temp[0].trim(),Integer.parseInt(temp[1].trim()));
        }
        student.sum = 0;
        for (Integer score : student.subject_score.values()) {
            student.sum += score;
        }
        student.average = student.sum / (student.subject_score.size());
        student.sum += "汉族".equals(student.nation) ? 0 : 10;
        student.sum += "体育特长生".equals(student.remark) ? 20 :
                ("艺术特长生".equals(student.remark) ? 15 : 0);
        if (!students.containsKey(student.id)){
            students.put(student.id,student);
        }
        System.out.println("学生"+student.name+"的成绩被添加");
    }

    public void printInfo(){
        System.out.println("请输入要打印的学生的学号（格式： 学号, 学号,...），按回车提交：");
        Scanner scanner = new Scanner(System.in);
        String idStr = scanner.nextLine();
        Pattern pattern = Pattern.compile("\\d{4}(\\,\\s\\d{4})?");
        Matcher matcher = pattern.matcher(idStr);
        while (! matcher.matches()){
            System.out.println("请按正确的格式输入要打印的学生的学号（格式： 学号, 学号,...），按回车提交：");
            idStr = scanner.nextLine();
            matcher = pattern.matcher(idStr);
        }
        String[] idArray = idStr.split(",");
        int[] ids = new int[idArray.length];
        for (int i = 0; i < idArray.length; i++) {
            ids[i] = Integer.parseInt(idArray[i].trim());
        }
        System.out.println("成绩单");
        System.out.print("姓名");
        if (!students.isEmpty()){
            for (Student student : students.values()) {
                if (student != null){
                    for (String subject : student.subject_score.keySet()) {
                        System.out.print("|"+subject);
                    }
                }
                break;
            }
        }
        System.out.println("|平均分|总分");
        System.out.println("========================");
        for (int i = 0; i < ids.length; i++) {
            if(students.containsKey(ids[i])){
                Student student = students.get(ids[i]);
                System.out.print(student.name);
                for (Integer score : student.subject_score.values()) {
                    System.out.print("|"+score);
                }
                System.out.println("|"+student.average+"|"+student.sum);
            }
        }
        System.out.println("========================");
        //求全班总分平均数与总分中位数
        ArrayList<Integer> sumList = new ArrayList<>();
        int sumAll = 0;
        double middleSum = 0.0;   //全班总分中位数
        for (Student student : students.values()) {
            sumAll += student.sum;
            sumList.add(student.sum);
        }
        middleSum = (sumList.size() % 2 == 0) ?
                (sumList.get(sumList.size()/2-1) + sumList.get(sumList.size()/2))/2 :
                sumList.get(sumList.size()/2);

        double averageSum = sumAll / students.size();   //全班总分平均数
        System.out.println("全班总分平均数:"+averageSum);
        System.out.println("全班总分中位数:"+middleSum);
    }

    static class Student {
        private String name;
        private int id;
        private String nation;
        private int klass;
        private String remark;
        private Map<String, Integer> subject_score;
        private int sum;
        private double average;
    }
}
